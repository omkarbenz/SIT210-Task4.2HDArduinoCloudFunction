#include <PubSubClient.h>
#include <WiFiNINA.h>

// Wiring:
// Connect the red LED's anode to pin 9
// Connect the green LED's anode to pin 10
// Connect the blue LED's anode to pin 11
// Connect the LED's cathode to GND through a resistor (around 220-330Î©).

// WiFi and MQTT Credentials
const char ssid[] = "Sia";
const char pass[] = "chelsea123";
const char broker[] = "1237ffec90fb466d9c385b4f40174429.s1.eu.hivemq.cloud";
const char mqttUser[] = "Chelsea";
const char mqttPass[] = "Chelsea@746";
int port = 8883;

// LED Pins
const int redPin = 9;
const int greenPin = 10;
const int bluePin = 11;

// Setup Network and MQTT Client
WiFiSSLClient net;
PubSubClient client(net);

void setup() {
  Serial.begin(115200);

  pinMode(redPin, OUTPUT);
  pinMode(greenPin, OUTPUT);
  pinMode(bluePin, OUTPUT);

  // Connect to WiFi
  WiFi.begin(ssid, pass);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("WiFi connected.");

  // MQTT setup
  client.setServer(broker, port);
  client.setCallback(callback);
}

void callback(char* topic, byte* payload, unsigned int length) {
  String receivedString;
  for (unsigned int i = 0; i < length; i++) {
    receivedString += (char)payload[i];
  }

  if (String(topic) == "Task3.3") {
    if (receivedString == "red") {
      toggleLED(redPin);
    } else if (receivedString == "green") {
      toggleLED(greenPin);
    } else if (receivedString == "blue") {
      toggleLED(bluePin);
    }
  }
}

void toggleLED(int pin) {
  if (digitalRead(pin) == HIGH) {
    digitalWrite(pin, LOW);
  } else {
    digitalWrite(pin, HIGH);
  }
}

void reconnect() {
  while (!client.connected()) {
    if (client.connect("ArduinoClient", mqttUser, mqttPass)) {
      client.subscribe("Task3.3");
    } else {
      delay(5000);
    }
  }
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
}
